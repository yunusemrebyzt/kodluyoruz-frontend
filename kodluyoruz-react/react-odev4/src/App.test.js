import React from "react";

import {render,screen,fireEvent} from "@testing-library/react";
import userEvent from '@testing-library/user-event';

import Header from "./Header";
import EmojiResults from "./EmojiResults";
import SearchInput from "./SearchInput";
import emojiList from "./emojiList.json";
import App from "./App";



test("BaÅŸlÄ±k kÄ±smÄ±nÄ±n baÅŸarÄ±lÄ± bir ÅŸekilde render edildiÄŸini kontrol edecek olan test", ()=>
{
  render(<Header/>);

  
  const headerElement = screen.getByText(/Emoji Search/i);
  expect(headerElement).toBeInTheDocument();
});

test("Uygulama ilk aÃ§Ä±ldÄ±ÄŸÄ±nda emoji listesinin baÅŸarÄ±lÄ± bir ÅŸekilde render edildiÄŸini kontrol edecek olan test", ()=>
{
  
  render(<App/>);
  let emojiList = [...document.querySelectorAll('.emoji-item')].slice(0, 10);
  emojiList.map((item)=>{
    expect(screen.getByText(item.title)).toBeInTheDocument();
})
  
});

test("Bir filtreleme iÅŸlemi yapÄ±ldÄ±ÄŸÄ±nda, emoji listesinin bu filtreye uygun ÅŸekilde yeniden render edildiÄŸini kontrol edecek olan test",   ()=>
{
  const textChangeMock = jest.fn();

  // BileÅŸeni render et, ve textChange fonksiyonunu geÃ§
  render(
    <>
      <SearchInput textChange={textChangeMock} />
      <EmojiResults emojiData={emojiList} />
    </>
  );

  // Input elemanÄ±nÄ± bul
  const input = screen.getByPlaceholderText('Search Emoji');

  // Input'a yazÄ± yazdÄ±r
  userEvent.type(input, 'Smile');

  // Input'un yazÄ±yÄ± doÄŸru aldÄ±ÄŸÄ±nÄ± kontrol et
  expect(input).toHaveValue('Smile');

  

  /// Filtreleme sonrasÄ±nda ekranda "Smile" iÃ§erikli emoji'nin olup olmadÄ±ÄŸÄ±nÄ± kontrol et
  const smileEmoji = screen.getByText('Smile'); // BaÅŸlÄ±kta 'Smile' geÃ§en emojiyi kontrol ediyoruz
  expect(smileEmoji).toBeInTheDocument(); // 'Smile' baÅŸlÄ±klÄ± emoji varsa test geÃ§er


});

test("Liste Ã¼zerinden herhangi emojiye tÄ±klandÄ±ÄŸÄ±nda, ilgili emojinin kopyalandÄ±ÄŸÄ±nÄ± kontrol edecek olan test", ()=>
{
  const textChangeMock = jest.fn();
  
  render(
    <>
      <SearchInput textChange={textChangeMock} />
      <EmojiResults emojiData={emojiList} />
    </>
  );
  
  const emojiDiv = screen.getByText("100");
  expect(emojiDiv).toBeInTheDocument();

  fireEvent.click(emojiDiv);
  
  
  expect(emojiDiv.parentElement.getAttribute('data-clipboard-text')).toMatch('ðŸ’¯')

  
  
});